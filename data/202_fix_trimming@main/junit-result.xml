<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="exporters" timestamp="2023-09-27T09:40:59Z" hostname="6aca9bb6a696" tests="2" skipped="0" failures="0" errors="2" time="1.13">
    <testcase time="0.541" classname="exporters" name="exporters_work">
      <error type="error" message="Error in `.local(x, ...)`: non-interactive browser() -- left over from debugging? ('test-exporters.R:33:5')">Error in `.local(x, ...)`: non-interactive browser() -- left over from debugging?
Backtrace:
    ▆
 1. └─formatters::export_as_txt(...) at test-exporters.R:33:4
 2.   └─base::vapply(...)
 3.     ├─base (local) FUN(X[[i]], ...)
 4.     └─formatters (local) FUN(X[[i]], ...)
 5.       └─formatters (local) .local(x, ...)</error>
    </testcase>
    <testcase time="0.589" classname="exporters" name="export_as_txt_maintains_repeated_columns_when_paginate_is_TRUE">
      <error type="error" message="Error in `.local(x, ...)`: non-interactive browser() -- left over from debugging? ('test-exporters.R:124:3')">Error in `.local(x, ...)`: non-interactive browser() -- left over from debugging?
Backtrace:
    ▆
 1. └─formatters::export_as_txt(dfmf, cpp = 90, rep_cols = 3) at test-exporters.R:124:2
 2.   └─base::vapply(...)
 3.     ├─base (local) FUN(X[[i]], ...)
 4.     └─formatters (local) FUN(X[[i]], ...)
 5.       └─formatters (local) .local(x, ...)</error>
    </testcase>
  </testsuite>
  <testsuite name="formatters" timestamp="2023-09-27T09:41:00Z" hostname="6aca9bb6a696" tests="106" skipped="0" failures="0" errors="1" time="0.536">
    <testcase time="0.0799999999999998" classname="formatters" name="formats_work"/>
    <testcase time="0.00200000000000022" classname="formatters" name="formats_work"/>
    <testcase time="0.00099999999999989" classname="formatters" name="formats_work"/>
    <testcase time="0.00200000000000022" classname="formatters" name="formats_work"/>
    <testcase time="0.00199999999999978" classname="formatters" name="formats_work"/>
    <testcase time="0.00200000000000022" classname="formatters" name="formats_work"/>
    <testcase time="0.00499999999999989" classname="formatters" name="formats_work"/>
    <testcase time="0.00199999999999978" classname="formatters" name="formats_work"/>
    <testcase time="0.00300000000000011" classname="formatters" name="formats_work"/>
    <testcase time="0.00099999999999989" classname="formatters" name="formats_work"/>
    <testcase time="0.004" classname="formatters" name="formats_work"/>
    <testcase time="0.00100000000000033" classname="formatters" name="formats_work"/>
    <testcase time="0.00199999999999978" classname="formatters" name="formats_work"/>
    <testcase time="0.00200000000000022" classname="formatters" name="formats_work"/>
    <testcase time="0.00099999999999989" classname="formatters" name="formats_work"/>
    <testcase time="0.00199999999999978" classname="formatters" name="formats_work"/>
    <testcase time="0.00100000000000033" classname="formatters" name="formats_work"/>
    <testcase time="0.00199999999999978" classname="formatters" name="formats_work"/>
    <testcase time="0.00099999999999989" classname="formatters" name="formats_work"/>
    <testcase time="0.00200000000000022" classname="formatters" name="formats_work"/>
    <testcase time="0.00199999999999978" classname="formatters" name="formats_work"/>
    <testcase time="0.00200000000000022" classname="formatters" name="formats_work"/>
    <testcase time="0.00099999999999989" classname="formatters" name="formats_work"/>
    <testcase time="0.00200000000000022" classname="formatters" name="formats_work"/>
    <testcase time="0.00199999999999978" classname="formatters" name="formats_work"/>
    <testcase time="0.004" classname="formatters" name="formats_work"/>
    <testcase time="0.00300000000000011" classname="formatters" name="formats_work"/>
    <testcase time="0.00099999999999989" classname="formatters" name="formats_work"/>
    <testcase time="0.00200000000000022" classname="formatters" name="formats_work"/>
    <testcase time="0.00199999999999978" classname="formatters" name="formats_work"/>
    <testcase time="0.00200000000000022" classname="formatters" name="formats_work"/>
    <testcase time="0.00199999999999978" classname="formatters" name="formats_work"/>
    <testcase time="0.00200000000000022" classname="formatters" name="formats_work"/>
    <testcase time="0.00099999999999989" classname="formatters" name="formats_work"/>
    <testcase time="0.00199999999999978" classname="formatters" name="formats_work"/>
    <testcase time="0.00200000000000022" classname="formatters" name="formats_work"/>
    <testcase time="0.00199999999999978" classname="formatters" name="formats_work"/>
    <testcase time="0.00100000000000033" classname="formatters" name="formats_work"/>
    <testcase time="0.00199999999999978" classname="formatters" name="formats_work"/>
    <testcase time="0.00200000000000022" classname="formatters" name="formats_work"/>
    <testcase time="0.00199999999999978" classname="formatters" name="formats_work"/>
    <testcase time="0.00200000000000022" classname="formatters" name="formats_work"/>
    <testcase time="0.00299999999999967" classname="formatters" name="formats_work"/>
    <testcase time="0.00200000000000022" classname="formatters" name="formats_work"/>
    <testcase time="0.004" classname="formatters" name="formats_work"/>
    <testcase time="0.00300000000000011" classname="formatters" name="formats_work"/>
    <testcase time="0.00199999999999978" classname="formatters" name="formats_work"/>
    <testcase time="0.00200000000000022" classname="formatters" name="formats_work"/>
    <testcase time="0.00199999999999978" classname="formatters" name="formats_work"/>
    <testcase time="0.00300000000000011" classname="formatters" name="formats_work"/>
    <testcase time="0.00199999999999978" classname="formatters" name="formats_work"/>
    <testcase time="0.00200000000000022" classname="formatters" name="formats_work"/>
    <testcase time="0.00300000000000011" classname="formatters" name="formats_work"/>
    <testcase time="0.00199999999999978" classname="formatters" name="formats_work"/>
    <testcase time="0.00100000000000033" classname="formatters" name="formats_work"/>
    <testcase time="0.00299999999999967" classname="formatters" name="formats_work"/>
    <testcase time="0.00300000000000011" classname="formatters" name="formats_work"/>
    <testcase time="0.0100000000000002" classname="formatters" name="formats_work"/>
    <testcase time="0.00999999999999979" classname="formatters" name="formats_work"/>
    <testcase time="0.0089999999999999" classname="formatters" name="formats_work"/>
    <testcase time="0.00600000000000023" classname="formatters" name="formats_work"/>
    <testcase time="0.00099999999999989" classname="formatters" name="formats_work"/>
    <testcase time="0.00199999999999978" classname="formatters" name="formats_work"/>
    <testcase time="0.00300000000000011" classname="formatters" name="formats_work"/>
    <testcase time="0.00200000000000022" classname="formatters" name="formats_work"/>
    <testcase time="0.00199999999999978" classname="formatters" name="formats_work"/>
    <testcase time="0.00200000000000022" classname="formatters" name="formats_work"/>
    <testcase time="0.00199999999999978" classname="formatters" name="formats_work"/>
    <testcase time="0.00200000000000022" classname="formatters" name="formats_work"/>
    <testcase time="0.00199999999999978" classname="formatters" name="formats_work"/>
    <testcase time="0.00300000000000011" classname="formatters" name="formats_work"/>
    <testcase time="0.00599999999999978" classname="formatters" name="formats_work"/>
    <testcase time="0.00200000000000022" classname="formatters" name="formats_work"/>
    <testcase time="0.00199999999999978" classname="formatters" name="formats_work"/>
    <testcase time="0.0110000000000001" classname="formatters" name="sprintf_formats_work"/>
    <testcase time="0.00200000000000022" classname="formatters" name="sprintf_formats_work"/>
    <testcase time="0.0129999999999999" classname="formatters" name="labels_and_miscellany"/>
    <testcase time="0.00199999999999978" classname="formatters" name="labels_and_miscellany"/>
    <testcase time="0.00700000000000012" classname="formatters" name="labels_and_miscellany"/>
    <testcase time="0.00300000000000011" classname="formatters" name="labels_and_miscellany"/>
    <testcase time="0.00199999999999978" classname="formatters" name="labels_and_miscellany"/>
    <testcase time="0.00300000000000011" classname="formatters" name="labels_and_miscellany"/>
    <testcase time="0.00200000000000022" classname="formatters" name="labels_and_miscellany"/>
    <testcase time="0.00699999999999967" classname="formatters" name="labels_and_miscellany"/>
    <testcase time="0.0130000000000003" classname="formatters" name="all_valid_format_labels_can_be_applied_without_error"/>
    <testcase time="0.00999999999999979" classname="formatters" name="all_valid_format_labels_can_be_applied_without_error"/>
    <testcase time="0.00600000000000023" classname="formatters" name="all_valid_format_labels_can_be_applied_without_error"/>
    <testcase time="0.00199999999999978" classname="formatters" name="all_valid_format_labels_can_be_applied_without_error"/>
    <testcase time="0.00999999999999979" classname="formatters" name="_unnamed_"/>
    <testcase time="0.00200000000000022" classname="formatters" name="_unnamed_"/>
    <testcase time="0.00199999999999978" classname="formatters" name="_unnamed_"/>
    <testcase time="0.00200000000000022" classname="formatters" name="_unnamed_"/>
    <testcase time="0.00700000000000012" classname="formatters" name="_unnamed_"/>
    <testcase time="0.00699999999999967" classname="formatters" name="_unnamed_"/>
    <testcase time="0.00300000000000011" classname="formatters" name="_unnamed_"/>
    <testcase time="0.00300000000000011" classname="formatters" name="_unnamed_"/>
    <testcase time="0.00700000000000012" classname="formatters" name="_unnamed_"/>
    <testcase time="0.00499999999999989" classname="formatters" name="_unnamed_"/>
    <testcase time="0.00199999999999978" classname="formatters" name="_unnamed_"/>
    <testcase time="0.00300000000000011" classname="formatters" name="_unnamed_"/>
    <testcase time="0.00499999999999989" classname="formatters" name="_unnamed_"/>
    <testcase time="0.00300000000000011" classname="formatters" name="_unnamed_"/>
    <testcase time="0.1" classname="formatters" name="_unnamed_"/>
    <testcase time="0.00199999999999978" classname="formatters" name="_unnamed_"/>
    <testcase time="0.012" classname="formatters" name="_unnamed_"/>
    <testcase time="0.0140000000000002" classname="formatters" name="_unnamed_">
      <error type="error" message="Error in `.local(x, ...)`: non-interactive browser() -- left over from debugging? ('test-formatters.R:540:1')">Error in `.local(x, ...)`: non-interactive browser() -- left over from debugging?
Backtrace:
    ▆
 1. ├─testthat::expect_equal(...) at test-formatters.R:540:0
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─base::grep("spn_val", toString(mpf))
 5. │ └─base::is.factor(x)
 6. ├─base::toString(mpf)
 7. └─formatters::toString(mpf)
 8.   └─formatters (local) .local(x, ...)</error>
    </testcase>
  </testsuite>
  <testsuite name="pagination" timestamp="2023-09-27T09:41:00Z" hostname="6aca9bb6a696" tests="15" skipped="0" failures="0" errors="1" time="1.062">
    <testcase time="0.153" classname="pagination" name="pagination_works"/>
    <testcase time="0.00099999999999989" classname="pagination" name="pagination_works"/>
    <testcase time="0.0150000000000001" classname="pagination" name="pagination_works"/>
    <testcase time="0.0710000000000002" classname="pagination" name="pagination_works"/>
    <testcase time="0.232" classname="pagination" name="pagination_works"/>
    <testcase time="0.105" classname="pagination" name="pagination_works"/>
    <testcase time="0.0260000000000002" classname="pagination" name="pagination_works"/>
    <testcase time="0.114" classname="pagination" name="pagination_works"/>
    <testcase time="0.0259999999999998" classname="pagination" name="pagination_works"/>
    <testcase time="0.00800000000000001" classname="pagination" name="pagination_works">
      <error type="error" message="Error in `.local(x, ...)`: non-interactive browser() -- left over from debugging? ('test-pagination.R:81:5')">Error in `.local(x, ...)`: non-interactive browser() -- left over from debugging?
Backtrace:
    ▆
 1. ├─base::toString(dfmf3) at test-pagination.R:81:4
 2. └─formatters::toString(dfmf3)
 3.   └─formatters (local) .local(x, ...)</error>
    </testcase>
    <testcase time="0.0350000000000001" classname="pagination" name="page_to_lcpp_stuff_works"/>
    <testcase time="0.00600000000000023" classname="pagination" name="page_to_lcpp_stuff_works"/>
    <testcase time="0.0579999999999998" classname="pagination" name="non_monospaced_fonts_are_caught"/>
    <testcase time="0.00599999999999978" classname="pagination" name="non_monospaced_fonts_are_caught"/>
    <testcase time="0.206" classname="pagination" name="spans_and_string_matrix_match_after_pagination_when_table_has_single_column"/>
  </testsuite>
  <testsuite name="table_inset and titles and footers word wrapping" timestamp="2023-09-27T09:41:02Z" hostname="6aca9bb6a696" tests="8" skipped="0" failures="0" errors="6" time="0.694">
    <testcase time="0.0379999999999998" classname="table_inset_and_titles_and_footers_word_wrapping" name="tf_wordwrap_and_table_inset_work_including_together_">
      <error type="error" message="Error in `.local(x, ...)`: non-interactive browser() -- left over from debugging? ('test-txt_wrap.R:16:3')">Error in `.local(x, ...)`: non-interactive browser() -- left over from debugging?
Backtrace:
    ▆
 1. ├─base::toString(matform, tf_wrap = TRUE, max_width = "auto", hsep = "-") at test-txt_wrap.R:16:2
 2. └─formatters::toString(...)
 3.   └─formatters (local) .local(x, ...)</error>
    </testcase>
    <testcase time="0.452" classname="table_inset_and_titles_and_footers_word_wrapping" name="toString_throws_a_warning_when_newline_is_in_string">
      <error type="error" message="Error in `.local(x, ...)`: non-interactive browser() -- left over from debugging? ('test-txt_wrap.R:59:3')">Error in `.local(x, ...)`: non-interactive browser() -- left over from debugging?
Backtrace:
     ▆
  1. ├─testthat::expect_silent(toString(bmf, tf_wrap = FALSE)) at test-txt_wrap.R:59:2
  2. │ └─testthat:::quasi_capture(enquo(object), NULL, evaluate_promise)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ ├─withr::with_output_sink(...)
  5. │   │ │ └─base::force(code)
  6. │   │ ├─base::withCallingHandlers(...)
  7. │   │ └─base::withVisible(code)
  8. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  9. ├─base::toString(bmf, tf_wrap = FALSE)
 10. └─formatters::toString(bmf, tf_wrap = FALSE)
 11.   └─formatters (local) .local(x, ...)</error>
    </testcase>
    <testcase time="0.0570000000000004" classname="table_inset_and_titles_and_footers_word_wrapping" name="works_with_words_that_are_too_big_no_warning_">
      <error type="error" message="Error in `.local(x, ...)`: non-interactive browser() -- left over from debugging? ('test-txt_wrap.R:71:3')">Error in `.local(x, ...)`: non-interactive browser() -- left over from debugging?
Backtrace:
    ▆
 1. ├─base::toString(bmf, tf_wrap = TRUE, max_width = 4, hsep = "-") at test-txt_wrap.R:71:2
 2. └─formatters::toString(bmf, tf_wrap = TRUE, max_width = 4, hsep = "-")
 3.   └─formatters (local) .local(x, ...)</error>
    </testcase>
    <testcase time="0.048" classname="table_inset_and_titles_and_footers_word_wrapping" name="auto_works_with_inset_and_col_gap">
      <error type="error" message="Error in `.local(x, ...)`: non-interactive browser() -- left over from debugging? ('test-txt_wrap.R:106:3')">Error in `.local(x, ...)`: non-interactive browser() -- left over from debugging?
Backtrace:
    ▆
 1. ├─base::toString(bmf, tf_wrap = TRUE, max_width = "auto", hsep = "=") at test-txt_wrap.R:106:2
 2. └─formatters::toString(...)
 3.   └─formatters (local) .local(x, ...)</error>
    </testcase>
    <testcase time="0.0350000000000001" classname="table_inset_and_titles_and_footers_word_wrapping" name="regression_tests_for_rtables_empty_title_underlying_issue"/>
    <testcase time="0.000999999999999446" classname="table_inset_and_titles_and_footers_word_wrapping" name="regression_tests_for_rtables_empty_title_underlying_issue"/>
    <testcase time="0.0270000000000001" classname="table_inset_and_titles_and_footers_word_wrapping" name="row_label_wrapping_has_identical_indentation">
      <error type="error" message="Error in `.local(x, ...)`: non-interactive browser() -- left over from debugging? ('test-txt_wrap.R:153:3')">Error in `.local(x, ...)`: non-interactive browser() -- left over from debugging?
Backtrace:
    ▆
 1. ├─base::toString(matform, widths = c(15, 5), hsep = "-") at test-txt_wrap.R:153:2
 2. └─formatters::toString(matform, widths = c(15, 5), hsep = "-")
 3.   └─formatters (local) .local(x, ...)</error>
    </testcase>
    <testcase time="0.0359999999999996" classname="table_inset_and_titles_and_footers_word_wrapping" name="wrap_txt_and_wrap_strings_work_and_avoid_trimming_whitespaces_and_">
      <error type="error" message="Error in `build_table(., iris %&gt;% mutate(Species = sprintf(&quot;   %s&quot;, Species)))`: could not find function &quot;build_table&quot; ('test-txt_wrap.R:169:3')">Error in `build_table(., iris %&gt;% mutate(Species = sprintf("   %s", Species)))`: could not find function "build_table"
Backtrace:
    ▆
 1. └─... %&gt;% ... at test-txt_wrap.R:169:2</error>
    </testcase>
  </testsuite>
</testsuites>
